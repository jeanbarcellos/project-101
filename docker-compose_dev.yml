version: "3.4"

services:
  database:
    container_name: project101_database
    image: postgres:14.5
    restart: always
    ports:
      - 5532:5432
    networks:
      - project101_net
    volumes:
      - project101_database_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=project101_java

  backend-java:
    container_name: project101_backend-java
    image: maven:3.6.3-jdk-11-slim
    depends_on:
      - database
    ports:
      - 8081:8080
    networks:
      - project101_net
    environment:
      - PORT=8080
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=project101_java
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - maven_repo:/root/.m2
      - ./backend-java/:/usr/src/mymaven:rw
      - ./backend-java/target:/usr/src/mymaven/target:rw
    working_dir: /usr/src/mymaven
    command: "mvn spring-boot:run"
    # command: "mvn clean verify"
    # stdin_open: true
    # tty: true

  frontend-reactjs:
    container_name: project101_frontend-reactjs
    image: node
    depends_on:
      - backend-java
    networks:
      - project101_net
    ports:
      - 8082:3000
    volumes:
      - ./frontend-reactjs/:/srv/react-docker:rw
      - ./frontend-reactjs/node_modules/:/srv/react-docker/node_modules:rw
    working_dir: /srv/react-docker
    stdin_open: true
    # command: "yarn start"

networks:
  project101_net:
    name: project101_net
    driver: bridge

volumes:
  project101_database_data:
    name: project101_database_data
    driver: local

  maven_repo:
    name: maven_repo
    driver: local
