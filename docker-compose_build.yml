version: "3.4"

services:
  database:
    container_name: project101_database
    image: postgres:14.5
    restart: always
    ports:
      - 5532:5432
    networks:
      - project101_net
    volumes:
      - project101_database_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=project101_java
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  backend-java:
    container_name: project101_backend-java
    image: jeanbarcellos/project101_backend-java
    build:
      context: ./backend-java
      dockerfile: "Dockerfile.multistage"
    depends_on:
      - database
    ports:
      - 8081:8080
    networks:
      - project101_net
    environment:
      - PORT=8080
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=project101_java
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    volumes:
      - maven_repo:/root/.m2

  frontend-reactjs:
    container_name: project101_frontend-reactjs
    image: "jeanbarcellos/project101_frontend-reactjs"
    build:
      context: ./frontend-reactjs
      dockerfile: "Dockerfile.multistage"
    networks:
      - project101_net
    ports:
      - 3000:3000
    volumes:
      - ./:/srv/react-docker
    working_dir: /srv/react-docker
    command: "yarn start"

networks:
  project101_net:
    name: project101_net
    driver: bridge

volumes:
  project101_database_data:
    name: project101_database_data
    driver: local

  maven_repo:
    name: maven_repo
    driver: local
